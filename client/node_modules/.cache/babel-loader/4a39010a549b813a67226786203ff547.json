{"ast":null,"code":"const isEmail = function (email) {\n  return /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email);\n};\n\nfunction validateName(name) {\n  name = name.trim();\n\n  if (name === \"\") {\n    return \"Name is required\";\n  } else {\n    return null;\n  }\n}\n\nfunction validateEmail(email) {\n  email = email.trim();\n\n  if (email === \"\") {\n    return \"Email is required\";\n  } else if (!isEmail(email)) {\n    return \"Enter a valid Email\";\n  } else {\n    return null;\n  }\n}\n\nfunction validateRole(role) {\n  if (role === \"\") {\n    return \"Role is required\";\n  } else {\n    return null;\n  }\n}\n\nfunction validateDOB(dob) {\n  dob = dob.trim();\n\n  if (dob === \"\") {\n    return \"Date of Birth is required\";\n  } else {\n    let parts = dob.split(\"-\");\n    var dtDOB = new Date(parts[0], parts[1], parts[2]);\n    var dtCurrent = new Date();\n\n    if (80 < dtCurrent.getFullYear() - dtDOB.getFullYear() || dtCurrent.getFullYear() - dtDOB.getFullYear() < 18) {\n      return \"Enter a valid Date of Birth\";\n    } else {\n      return null;\n    }\n  }\n}\n\nfunction validateGender(gender) {\n  if (gender === \"\") {\n    return \"Gender is required\";\n  } else {\n    return null;\n  }\n}\n\nfunction validateEmployee(object) {\n  nameError = validateName(object.name);\n  emailError = validateEmail(object.email);\n  roleError = validateRole(object.role);\n  dobError = validateDOB(object.dob);\n  genderError = validateGender(object.gender);\n  return {\n    nameError: nameError || \"\",\n    emailError: emailError || \"\",\n    roleError: roleError || \"\",\n    dobError: dobError || \"\",\n    genderError: genderError || \"\"\n  };\n}\n\nexport default {\n  validateDOB,\n  validateRole,\n  validateName,\n  validateGender,\n  validateEmail,\n  validateEmployee\n};","map":{"version":3,"sources":["/home/rjmata95/Desktop/Learning/platzi/react/hello-react/src/components/EmployeeForm/formValidation.js"],"names":["isEmail","email","test","validateName","name","trim","validateEmail","validateRole","role","validateDOB","dob","parts","split","dtDOB","Date","dtCurrent","getFullYear","validateGender","gender","validateEmployee","object","nameError","emailError","roleError","dobError","genderError"],"mappings":"AAAA,MAAMA,OAAO,GAAG,UAAUC,KAAV,EAAiB;AAC/B,SAAO,yJAAyJC,IAAzJ,CACLD,KADK,CAAP;AAGD,CAJD;;AAMA,SAASE,YAAT,CAAsBC,IAAtB,EAA4B;AAC1BA,EAAAA,IAAI,GAAGA,IAAI,CAACC,IAAL,EAAP;;AACA,MAAID,IAAI,KAAK,EAAb,EAAiB;AACf,WAAO,kBAAP;AACD,GAFD,MAEO;AACL,WAAO,IAAP;AACD;AACF;;AACD,SAASE,aAAT,CAAuBL,KAAvB,EAA8B;AAC5BA,EAAAA,KAAK,GAAGA,KAAK,CAACI,IAAN,EAAR;;AACA,MAAIJ,KAAK,KAAK,EAAd,EAAkB;AAChB,WAAO,mBAAP;AACD,GAFD,MAEO,IAAI,CAACD,OAAO,CAACC,KAAD,CAAZ,EAAqB;AAC1B,WAAO,qBAAP;AACD,GAFM,MAEA;AACL,WAAO,IAAP;AACD;AACF;;AAED,SAASM,YAAT,CAAsBC,IAAtB,EAA4B;AAC1B,MAAIA,IAAI,KAAK,EAAb,EAAiB;AACf,WAAO,kBAAP;AACD,GAFD,MAEO;AACL,WAAO,IAAP;AACD;AACF;;AAED,SAASC,WAAT,CAAqBC,GAArB,EAA0B;AACxBA,EAAAA,GAAG,GAAGA,GAAG,CAACL,IAAJ,EAAN;;AACA,MAAIK,GAAG,KAAK,EAAZ,EAAgB;AACd,WAAO,2BAAP;AACD,GAFD,MAEO;AACL,QAAIC,KAAK,GAAGD,GAAG,CAACE,KAAJ,CAAU,GAAV,CAAZ;AACA,QAAIC,KAAK,GAAG,IAAIC,IAAJ,CAASH,KAAK,CAAC,CAAD,CAAd,EAAmBA,KAAK,CAAC,CAAD,CAAxB,EAA6BA,KAAK,CAAC,CAAD,CAAlC,CAAZ;AACA,QAAII,SAAS,GAAG,IAAID,IAAJ,EAAhB;;AACA,QACE,KAAKC,SAAS,CAACC,WAAV,KAA0BH,KAAK,CAACG,WAAN,EAA/B,IACAD,SAAS,CAACC,WAAV,KAA0BH,KAAK,CAACG,WAAN,EAA1B,GAAgD,EAFlD,EAGE;AACA,aAAO,6BAAP;AACD,KALD,MAKO;AACL,aAAO,IAAP;AACD;AACF;AACF;;AAED,SAASC,cAAT,CAAwBC,MAAxB,EAAgC;AAC9B,MAAIA,MAAM,KAAK,EAAf,EAAmB;AACjB,WAAO,oBAAP;AACD,GAFD,MAEO;AACL,WAAO,IAAP;AACD;AACF;;AAED,SAASC,gBAAT,CAA0BC,MAA1B,EAAkC;AAChCC,EAAAA,SAAS,GAAGlB,YAAY,CAACiB,MAAM,CAAChB,IAAR,CAAxB;AACAkB,EAAAA,UAAU,GAAGhB,aAAa,CAACc,MAAM,CAACnB,KAAR,CAA1B;AACAsB,EAAAA,SAAS,GAAGhB,YAAY,CAACa,MAAM,CAACZ,IAAR,CAAxB;AACAgB,EAAAA,QAAQ,GAAGf,WAAW,CAACW,MAAM,CAACV,GAAR,CAAtB;AACAe,EAAAA,WAAW,GAAGR,cAAc,CAACG,MAAM,CAACF,MAAR,CAA5B;AAEA,SAAO;AACLG,IAAAA,SAAS,EAAEA,SAAS,IAAI,EADnB;AAELC,IAAAA,UAAU,EAAEA,UAAU,IAAI,EAFrB;AAGLC,IAAAA,SAAS,EAAEA,SAAS,IAAI,EAHnB;AAILC,IAAAA,QAAQ,EAAEA,QAAQ,IAAI,EAJjB;AAKLC,IAAAA,WAAW,EAAEA,WAAW,IAAI;AALvB,GAAP;AAOD;;AAED,eAAe;AACbhB,EAAAA,WADa;AAEbF,EAAAA,YAFa;AAGbJ,EAAAA,YAHa;AAIbc,EAAAA,cAJa;AAKbX,EAAAA,aALa;AAMba,EAAAA;AANa,CAAf","sourcesContent":["const isEmail = function (email) {\n  return /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\n    email\n  );\n};\n\nfunction validateName(name) {\n  name = name.trim();\n  if (name === \"\") {\n    return \"Name is required\";\n  } else {\n    return null;\n  }\n}\nfunction validateEmail(email) {\n  email = email.trim();\n  if (email === \"\") {\n    return \"Email is required\";\n  } else if (!isEmail(email)) {\n    return \"Enter a valid Email\";\n  } else {\n    return null;\n  }\n}\n\nfunction validateRole(role) {\n  if (role === \"\") {\n    return \"Role is required\";\n  } else {\n    return null;\n  }\n}\n\nfunction validateDOB(dob) {\n  dob = dob.trim();\n  if (dob === \"\") {\n    return \"Date of Birth is required\";\n  } else {\n    let parts = dob.split(\"-\");\n    var dtDOB = new Date(parts[0], parts[1], parts[2]);\n    var dtCurrent = new Date();\n    if (\n      80 < dtCurrent.getFullYear() - dtDOB.getFullYear() ||\n      dtCurrent.getFullYear() - dtDOB.getFullYear() < 18\n    ) {\n      return \"Enter a valid Date of Birth\";\n    } else {\n      return null;\n    }\n  }\n}\n\nfunction validateGender(gender) {\n  if (gender === \"\") {\n    return \"Gender is required\";\n  } else {\n    return null;\n  }\n}\n\nfunction validateEmployee(object) {\n  nameError = validateName(object.name);\n  emailError = validateEmail(object.email);\n  roleError = validateRole(object.role);\n  dobError = validateDOB(object.dob);\n  genderError = validateGender(object.gender);\n\n  return {\n    nameError: nameError || \"\",\n    emailError: emailError || \"\",\n    roleError: roleError || \"\",\n    dobError: dobError || \"\",\n    genderError: genderError || \"\",\n  };\n}\n\nexport default {\n  validateDOB,\n  validateRole,\n  validateName,\n  validateGender,\n  validateEmail,\n  validateEmployee,\n};\n"]},"metadata":{},"sourceType":"module"}