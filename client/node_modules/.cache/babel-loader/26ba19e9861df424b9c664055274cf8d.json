{"ast":null,"code":"var _jsxFileName = \"/home/rjmata95/Desktop/Learning/platzi/react/hello-react/src/pages/MainApp.js\";\nimport React from \"react\";\nimport \"./styles/MainApp.css\";\nimport NavBar from \"../components/NavBar\";\nimport EmployeeForm from \"../components/EmployeeForm\";\nimport EmployeeTable from \"../components/EmployeeTable\";\nimport { v4 as uuid } from \"uuid\";\nimport formValidation from \"../components/formValidation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formInitialState = {\n  name: \"\",\n  nameError: null,\n  email: \"\",\n  emailError: null,\n  role: \"\",\n  roleError: null,\n  dob: \"\",\n  dobError: null,\n  gender: \"\",\n  genderError: null\n};\n\nclass mainApp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchData = async () => {\n      this.setState({\n        loading: true\n      });\n\n      try {\n        const response = await fetch(\"http://localhost:8080/table\");\n        const data = await response.json();\n        this.setState({\n          loading: false,\n          table: {\n            data: data.body\n          }\n        });\n        console.log(data);\n      } catch (error) {\n        this.setState({\n          loading: false,\n          error\n        });\n        console.log(`there's been an error: ${error}`);\n      }\n    };\n\n    this.submitData = async data => {\n      this.setState({\n        loading: true\n      });\n\n      try {\n        const response = await fetch(\"http://localhost:8080/table\", {\n          method: \"POST\",\n          mode: \"cors\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: data\n        });\n        console.log(response);\n      } catch (error) {\n        console.log(`there was an Error during POST method: ${error}`);\n      }\n    };\n\n    this.setNewEntries = () => {};\n\n    this.formChange = e => {\n      this.setState(state => ({\n        form: { ...state.form,\n          [e.target.name]: e.target.value\n        }\n      }));\n    };\n\n    this.formSubmitted = e => {\n      e.preventDefault(); //validate entries from this.state.form\n\n      this.setState(state => {\n        let nameError = formValidation.validateName(state.form.name);\n        let emailError = formValidation.validateEmail(state.form.email);\n        let roleError = formValidation.validateRole(state.form.role);\n        let dobError = formValidation.validateDOB(state.form.dob);\n        let genderError = formValidation.validateGender(state.form.gender);\n        let newData;\n\n        if (nameError === null && emailError === null && roleError === null && dobError === null && genderError === null) {\n          newData = state.table.data.concat({\n            _id: uuid(),\n            ...state.form\n          });\n          this.submitData(newData);\n          return {\n            form: formInitialState,\n            table: {\n              data: newData\n            }\n          };\n        } else {\n          return {\n            form: {\n              nameError,\n              emailError,\n              roleError,\n              dobError,\n              genderError\n            }\n          };\n        }\n      }); //toggle submit to true (may not be necessary)\n    };\n\n    this.state = {\n      loading: true,\n      error: null,\n      form: formInitialState,\n      table: {\n        submit: false,\n        data: [// {\n          //   name: \"Raynulfo Mata\",\n          //   email: \"rjmata95@gmail.com\",\n          //   role: \"JrDev\",\n          //   dob: \"12/19/1995\",\n          //   gender: \"male\",\n          // },\n        ]\n      }\n    };\n  }\n\n  componentDidMount() {\n    // this.setState({\n    //   loading: false,\n    // });\n    this.fetchData();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"green-bg\",\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(EmployeeForm, {\n          onChange: this.formChange,\n          formState: this.state.form,\n          onSubmit: this.formSubmitted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(EmployeeTable, {\n          updateTable: this.state.table.data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default mainApp;","map":{"version":3,"sources":["/home/rjmata95/Desktop/Learning/platzi/react/hello-react/src/pages/MainApp.js"],"names":["React","NavBar","EmployeeForm","EmployeeTable","v4","uuid","formValidation","formInitialState","name","nameError","email","emailError","role","roleError","dob","dobError","gender","genderError","mainApp","Component","constructor","props","fetchData","setState","loading","response","fetch","data","json","table","body","console","log","error","submitData","method","mode","headers","setNewEntries","formChange","e","state","form","target","value","formSubmitted","preventDefault","validateName","validateEmail","validateRole","validateDOB","validateGender","newData","concat","_id","submit","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./styles/MainApp.css\";\nimport NavBar from \"../components/NavBar\";\nimport EmployeeForm from \"../components/EmployeeForm\";\nimport EmployeeTable from \"../components/EmployeeTable\";\nimport { v4 as uuid } from \"uuid\";\nimport formValidation from \"../components/formValidation\";\n\nconst formInitialState = {\n  name: \"\",\n  nameError: null,\n  email: \"\",\n  emailError: null,\n  role: \"\",\n  roleError: null,\n  dob: \"\",\n  dobError: null,\n  gender: \"\",\n  genderError: null,\n};\nclass mainApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      error: null,\n      form: formInitialState,\n      table: {\n        submit: false,\n        data: [\n          // {\n          //   name: \"Raynulfo Mata\",\n          //   email: \"rjmata95@gmail.com\",\n          //   role: \"JrDev\",\n          //   dob: \"12/19/1995\",\n          //   gender: \"male\",\n          // },\n        ],\n      },\n    };\n  }\n\n  componentDidMount() {\n    // this.setState({\n    //   loading: false,\n    // });\n    this.fetchData();\n  }\n\n  fetchData = async () => {\n    this.setState({ loading: true });\n    try {\n      const response = await fetch(\"http://localhost:8080/table\");\n      const data = await response.json();\n      this.setState({\n        loading: false,\n        table: { data: data.body },\n      });\n\n      console.log(data);\n    } catch (error) {\n      this.setState({\n        loading: false,\n        error,\n      });\n      console.log(`there's been an error: ${error}`);\n    }\n  };\n\n  submitData = async (data) => {\n    this.setState({ loading: true });\n    try {\n      const response = await fetch(\"http://localhost:8080/table\", {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: data,\n      });\n      console.log(response);\n    } catch (error) {\n      console.log(`there was an Error during POST method: ${error}`);\n    }\n  };\n\n  setNewEntries = () => {};\n\n  formChange = (e) => {\n    this.setState((state) => ({\n      form: {\n        ...state.form,\n        [e.target.name]: e.target.value,\n      },\n    }));\n  };\n  formSubmitted = (e) => {\n    e.preventDefault();\n    //validate entries from this.state.form\n\n    this.setState((state) => {\n      let nameError = formValidation.validateName(state.form.name);\n      let emailError = formValidation.validateEmail(state.form.email);\n      let roleError = formValidation.validateRole(state.form.role);\n      let dobError = formValidation.validateDOB(state.form.dob);\n      let genderError = formValidation.validateGender(state.form.gender);\n      let newData;\n\n      if (\n        nameError === null &&\n        emailError === null &&\n        roleError === null &&\n        dobError === null &&\n        genderError === null\n      ) {\n        newData = state.table.data.concat({\n          _id: uuid(),\n          ...state.form,\n        });\n        this.submitData(newData);\n        return { form: formInitialState, table: { data: newData } };\n      } else {\n        return {\n          form: { nameError, emailError, roleError, dobError, genderError },\n        };\n      }\n    });\n\n    //toggle submit to true (may not be necessary)\n  };\n  render() {\n    return (\n      <div className=\"green-bg\">\n        <NavBar />\n        <div>\n          <EmployeeForm\n            onChange={this.formChange}\n            formState={this.state.form}\n            onSubmit={this.formSubmitted}\n          />\n        </div>\n        <div>\n          <EmployeeTable updateTable={this.state.table.data} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default mainApp;\n"]},"metadata":{},"sourceType":"module"}